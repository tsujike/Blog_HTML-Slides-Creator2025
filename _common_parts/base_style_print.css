/* 

はい、その認識で概ね正しいです！

print.css（または style_print.css の @media print ブロック）に記述する内容は、理想的には「印刷時特有のスタイル」や「画面表示用スタイルからの差分・上書き」が中心となり、必ずしも膨大な量になるわけではありません。

print.css に記述する主な内容のイメージ:

@page ルール:

用紙サイズ (size: A4 landscape; など)。

マージン (margin: 1cm; など)。

CSSによるヘッダー/フッターの指定 (@top-center { content: "資料タイトル"; } など)。これは、ブラウザのデフォルトヘッダー/フッターを抑制し、独自のものを表示するために重要です。

印刷用の基本リセットとデフォルトスタイル:

body の背景色を白に (background-color: white !important;)。

文字色を黒に (color: black !important;)。

print-color-adjust: exact; (背景画像などを印刷する場合)。

印刷に適したフォントサイズや行間の設定。

レイアウト調整:

各スライドが1ページに収まるようにするためのスタイル（例: .slide の width, height, min-height の調整）。

改ページ制御 (page-break-before, page-break-after, page-break-inside)。

画面表示では display: flex; だったものを display: block; に戻すなど。

ヘッダーやフッター領域を確保するためのパディング調整（例: .slide の padding-top, padding-bottom）。

不要な要素の非表示:

画面表示専用のUI要素（ボタン、ナビゲーションなど）を display: none !important; で非表示にする。

既存スタイルの上書き:

画面表示ではカラフルだった要素の色を、印刷用にモノクロや落ち着いた色に変更する。

画面表示では大きかったフォントサイズを、印刷用に適切なサイズに小さくする。

共通パーツについても、印刷時だけ見た目を変えたい部分があれば、ここでセレクタを指定して上書きします。 (例: .pricing-table { border-color: #ccc !important; })

なぜ「そこまで多くない」と言えるか（理想的な場合）:

HTML構造の共通性: 画面表示と印刷表示でHTML構造が大きく変わらなければ、多くのスタイルは流用できます。

CSSのカスケーディング: style.css で基本的なスタイルが適用された上で、print.css で差分だけを上書きしていくため、全てのスタイルを書き直す必要はありません。

共通パーツの設計: 共通パーツのCSSが、印刷時にもある程度耐えられるように（例えば、極端に画面依存のスタイルになっていないように）設計されていれば、print.css での上書きは最小限で済みます。

ただし、以下のような場合は print.css の記述量が増えることもあります。

画面表示と印刷表示で、レイアウトやデザインを大幅に変えたい場合。

非常に複雑な要素の印刷表現を細かく制御したい場合。

元の style.css が印刷のことをあまり考慮せずに作られていて、上書きする箇所が多い場合。

結論として、ご認識の通り、print.css は「印刷のための特別な調整」に特化し、画面表示用のスタイルをベースに必要な部分だけを修正・追加していく、というスタンスで進めるのが効率的です。

実際に作業を進めていく中で、print.css がどれくらいの量になるかはプロジェクトのデザインや要件によりますが、最初から「全てを印刷用に書き直す」と考える必要はありません。
まずは @page ルールと基本的なリセット、改ページ制御あたりから手をつけていくと良いでしょう。
 */

    

/* _common_parts/base_style_print.css */
@charset "UTF-8";

@import url("01title_slide.css"); /* もし印刷時もタイトルスライドのスタイルが必要なら */
@import url("02agenda_slide.css"); /* 同上 */
@import url("03company_profile_slide.css"); /* 同上 */
/* ...他の共通パーツCSS... */

:root {
    /* Print variable overrides (元々あったもの) */
    --color-text-wp: var(--color-black-wp); /* style.cssにある */
    --color-heading-wp: var(--color-black-wp);
    --logo-image-path: url('logo-small.png'); 

    /* もし style.css で定義されている変数をここで上書きまたは定義するなら */
    --color-black-wp: #000000; /* 例: 直接定義 */
    --color-white-wp: #ffffff; /* 例: 直接定義 */
    --print-header-height: 1.2cm; /* 例: 直接定義 */
    --print-footer-height: 0.8cm; /* 例: 直接定義 */
    --print-v-margin: 0.6cm; /* 例: 直接定義 */
}


@page {
    size: A4 landscape; /* A4横向き */
    margin: 1cm; /* ★style_wp.css と同じ値にしてみる★ */

    @top-left { content: ""; }
    @top-center { content: ""; }
    @top-right { content: var(--logo-image-path);
        margin-right: 1cm; /* 右端からの余白 */
            }
    @bottom-left { content: ""; }
    @bottom-center { content: ""; }
    @bottom-right { content: ""; }
}

/* ================================================== */
/* ================= Print Styles =================== */
/* ================================================== */
@media print {


    /* --- Print Header/Footer Containers --- */
    .print-header,
    .print-footer {
        display: flex !important;
        align-items: center;
        position: absolute !important;
        left: 0 !important;
        right: 0 !important;
        width: 100% !important;
        z-index: 100 !important;
    }
    .print-header {
        top: 0 !important;
        height: var(--print-header-height) !important;
        justify-content: flex-end !important;
        padding: 0 0.5cm !important;
        background-color: transparent !important;
        border: none !important;
    }
    .print-footer {
        bottom: 0 !important;
        height: var(--print-footer-height) !important;
        justify-content: space-between !important;
        padding: 0 0 !important;
        background-color: #333 !important;
        color: var(--color-white-wp) !important;
        font-size: 10pt !important;
        border: none !important;
    }


    /* --- Print Slide Adjustments --- */
    .slide {
        padding-top: calc(var(--print-header-height) + var(--print-v-margin)) !important;
        padding-bottom: calc(var(--print-footer-height) + var(--print-v-margin)) !important;
        overflow: visible !important; 
        position: relative !important;
    }

    /* --- footerのBar位置を調整する部品 --- */
    #slide-cover .print-page-break-adjuster { margin-top: 30mm !important; }
    #slide-introduction .print-page-break-adjuster { margin-top: 100mm !important; }

} /* End of @media print */